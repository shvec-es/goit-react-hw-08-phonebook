{"version":3,"sources":["components/Navigation/Navigation.module.css","redux/contacts/contacts-operations.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/store.js","styles.js","components/Navigation/Navigation.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactListItem.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["module","exports","axios","defaults","baseURL","fetchContacts","createAsyncThunk","_","a","rejectWithValue","get","items","data","message","addContact","name","phone","post","item","deleteContact","contactId","delete","deletedItem","changeFilter","createAction","itemsReducer","createReducer","fulfilled","payload","state","filter","contact","id","filterReducer","loadingForFetchReducer","pending","rejected","loadingForAddReducer","loadingForDeleteReducer","errorReducer","contactsReducer","combineReducers","loadingForFetch","loadingForAdd","loadingForDelete","error","store","configureStore","reducer","contacts","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","Wrapper","styled","div","Title","h2","Form","form","Label","label","Input","input","Button","button","ButtonItems","Text","p","TextFilter","InputFilter","Table","table","Navigation","className","s","nav","to","link","getFilter","getLoadingForFetch","getLoadingForAdd","getLoadingForDelete","getError","getFilteredContacts","createSelector","toLowerCase","includes","ContactForm","useState","setName","setPhone","useSelector","dispatch","useDispatch","handleChange","e","target","value","clearForm","onSubmit","preventDefault","find","toast","warning","success","type","placeholder","pattern","title","onChange","required","color","height","width","wrapperStyle","display","marginRight","Filter","autoComplete","ContactListItem","onClick","onDeleteItem","ContactList","map","App","filteredContacts","useEffect","justifyContent","marginTop","autoClose","theme","path","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4d55c0aa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Navigation_link__38fP4\"};","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://61e6956cce3a2d0017359297.mockapi.io';\r\n\r\nexport const fetchContacts = createAsyncThunk(\r\n  'contacts/fetchContacts',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      const items = await axios.get('/contacts');\r\n      return items.data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  },\r\n);\r\n\r\nexport const addContact = createAsyncThunk(\r\n  'contacts/addContact',\r\n\r\n  async ({ name, phone }, { rejectWithValue }) => {\r\n    try {\r\n      const item = await axios.post('/contacts', { name, phone });\r\n      return item.data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  },\r\n);\r\n\r\nexport const deleteContact = createAsyncThunk(\r\n  'contacts/deleteContact',\r\n  async (contactId, { rejectWithValue }) => {\r\n    try {\r\n      const deletedItem = await axios.delete(`/contacts/${contactId}`);\r\n      return deletedItem.data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  },\r\n);\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const changeFilter = createAction('contacts/ChangeFilter');\r\n","import { combineReducers, createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  fetchContacts,\r\n  addContact,\r\n  deleteContact,\r\n} from './contacts-operations';\r\nimport { changeFilter } from './contacts-actions';\r\n\r\nconst itemsReducer = createReducer([], {\r\n  [fetchContacts.fulfilled]: (_, { payload }) => payload,\r\n  [addContact.fulfilled]: (state, { payload }) => [payload, ...state],\r\n  [deleteContact.fulfilled]: (state, { payload }) =>\r\n    state.filter(contact => contact.id !== payload.id),\r\n});\r\n\r\nconst filterReducer = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loadingForFetchReducer = createReducer(false, {\r\n  [fetchContacts.pending]: () => true,\r\n  [fetchContacts.fulfilled]: () => false,\r\n  [fetchContacts.rejected]: () => false,\r\n});\r\n\r\nconst loadingForAddReducer = createReducer(false, {\r\n  [addContact.pending]: () => true,\r\n  [addContact.fulfilled]: () => false,\r\n  [addContact.rejected]: () => false,\r\n});\r\n\r\nconst loadingForDeleteReducer = createReducer(false, {\r\n  [deleteContact.pending]: () => true,\r\n  [deleteContact.fulfilled]: () => false,\r\n  [deleteContact.rejected]: () => false,\r\n});\r\n\r\nconst errorReducer = createReducer(null, {\r\n  [fetchContacts.rejected]: (_, { payload }) => payload,\r\n  [fetchContacts.pending]: () => null,\r\n  [addContact.rejected]: (_, { payload }) => payload,\r\n  [addContact.pending]: () => null,\r\n  [deleteContact.rejected]: (_, { payload }) => payload,\r\n  [deleteContact.pending]: () => null,\r\n});\r\n\r\nconst contactsReducer = combineReducers({\r\n  items: itemsReducer,\r\n  filter: filterReducer,\r\n  loadingForFetch: loadingForFetchReducer,\r\n  loadingForAdd: loadingForAddReducer,\r\n  loadingForDelete: loadingForDeleteReducer,\r\n  error: errorReducer,\r\n});\r\n\r\nexport default contactsReducer;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport contactsReducer from './contacts/contacts-reducer';\r\n\r\nconst middleware = getDefaultMiddleware => [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n","import styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  width: 450px;\r\n  margin: 25px auto 0;\r\n  padding: 15px;\r\n  background-color: #fbfcfc;\r\n  border-radius: 3px;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  font-size: 1.5em;\r\n  text-align: center;\r\n  color: DarkCyan;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  margin: 0 auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 250px;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  color: Teal;\r\n  font-size: 1em;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  width: 220px;\r\n  padding: 0.5em;\r\n  margin: 0.5em;\r\n  color: Teal;\r\n  background: AliceBlue;\r\n  border: none;\r\n  border-radius: 3px;\r\n\r\n  &::placeholder {\r\n    color: Teal;\r\n    opacity: 0.3;\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  max-width: 150px;\r\n  background: DarkCyan;\r\n  color: white;\r\n\r\n  font-size: 1em;\r\n  margin: 1em auto;\r\n  padding: 0.25em 1em;\r\n  border: 2px solid DarkCyan;\r\n  border-radius: 3px;\r\n  cursor: pointer;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    background: white;\r\n    color: DarkCyan;\r\n  }\r\n`;\r\n\r\nconst ButtonItems = styled(Button)`\r\n  margin: 0;\r\n`;\r\n\r\nconst Text = styled.p`\r\n  color: Teal;\r\n  font-size: 1em;\r\n`;\r\n\r\nconst TextFilter = styled(Text)`\r\n  margin-left: 30px;\r\n`;\r\n\r\nconst InputFilter = styled(Input)`\r\n  margin-left: 25px;\r\n`;\r\n\r\nconst Table = styled.table`\r\n  width: 420px;\r\n  margin-top: 10px;\r\n  padding: 15px;\r\n  // border-radius: 3px;\r\n`;\r\n\r\nexport {\r\n  Wrapper,\r\n  Title,\r\n  Form,\r\n  Label,\r\n  Input,\r\n  Button,\r\n  ButtonItems,\r\n  Text,\r\n  TextFilter,\r\n  InputFilter,\r\n  Table,\r\n};\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Navigation.module.css';\r\n\r\nfunction Navigation() {\r\n  return (\r\n    <>\r\n      <nav className={s.nav}>\r\n        <NavLink to=\"/register\" className={s.link}>\r\n          Home\r\n        </NavLink>\r\n        <NavLink to=\"/login\" className={s.link}>\r\n          Movies\r\n        </NavLink>\r\n        <NavLink to=\"/contacts\" className={s.link}>\r\n          Movies\r\n        </NavLink>\r\n      </nav>\r\n      <hr />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getItems = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\nexport const getLoadingForFetch = state => state.contacts.loadingForFetch;\r\nexport const getLoadingForAdd = state => state.contacts.loadingForAdd;\r\nexport const getLoadingForDelete = state => state.contacts.loadingForDelete;\r\nexport const getError = state => state.contacts.error;\r\n\r\nexport const getFilteredContacts = createSelector(\r\n  [getItems, getFilter],\r\n  (items, filter) =>\r\n    items.filter(({ name }) =>\r\n      name.toLowerCase().includes(filter.toLowerCase()),\r\n    ),\r\n);\r\n","import { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { TailSpin } from 'react-loader-spinner';\r\nimport { Form, Label, Input, Button } from 'styles';\r\nimport { addContact } from '../../redux/contacts/contacts-operations';\r\nimport {\r\n  getFilteredContacts,\r\n  getLoadingForAdd,\r\n} from '../../redux/contacts/contacts-selectors';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction ContactForm() {\r\n  const [name, setName] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const items = useSelector(getFilteredContacts);\r\n  const loadingForAdd = useSelector(getLoadingForAdd);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'phone':\r\n        setPhone(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (items.find(contact => contact.name === name)) {\r\n      clearForm();\r\n      return toast.warning(`${name} is already in contacts!`);\r\n    }\r\n\r\n    dispatch(addContact({ name, phone }));\r\n    toast.success('Contact added successfully!');\r\n    clearForm();\r\n  };\r\n\r\n  const clearForm = () => {\r\n    setName('');\r\n    setPhone('');\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <Label>\r\n        Name\r\n        <br />\r\n        <Input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          placeholder=\"Name Surname\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </Label>\r\n      <Label>\r\n        Number\r\n        <br />\r\n        <Input\r\n          type=\"tel\"\r\n          name=\"phone\"\r\n          value={phone}\r\n          placeholder=\"000-000-0000\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </Label>\r\n      <Button type=\"submit\">\r\n        {loadingForAdd && (\r\n          <TailSpin\r\n            color=\"#00BFFF\"\r\n            height=\"14\"\r\n            width=\"14\"\r\n            wrapperStyle={{\r\n              display: 'inline',\r\n              marginRight: '10px',\r\n            }}\r\n          />\r\n        )}\r\n        Add contact\r\n      </Button>\r\n    </Form>\r\n  );\r\n}\r\n\r\nContactForm.propTypes = {\r\n  name: PropTypes.string,\r\n  phone: PropTypes.string,\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { TextFilter, InputFilter } from 'styles';\r\nimport { changeFilter } from '../../redux/contacts/contacts-actions';\r\nimport { getFilter } from 'redux/contacts/contacts-selectors';\r\n\r\nconst Filter = () => {\r\n  const filter = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  const onChangeFilter = e => dispatch(changeFilter(e.target.value));\r\n\r\n  return (\r\n    <>\r\n      <TextFilter>Find contacts by name</TextFilter>\r\n      <InputFilter\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={filter}\r\n        onChange={onChangeFilter}\r\n        autoComplete=\"off\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string,\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Text, ButtonItems } from 'styles';\r\nimport { TailSpin } from 'react-loader-spinner';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteContact } from '../../redux/contacts/contacts-operations';\r\nimport { toast } from 'react-toastify';\r\nimport { getLoadingForDelete } from 'redux/contacts/contacts-selectors';\r\n\r\nconst ContactListItem = ({ id, name, phone }) => {\r\n  const loadingForDelete = useSelector(getLoadingForDelete);\r\n  const dispatch = useDispatch();\r\n\r\n  const onDeleteItem = id => {\r\n    dispatch(deleteContact(id));\r\n    toast.success('Contact deleted successfully!');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <tr>\r\n        <td>\r\n          <Text>{name}:</Text>\r\n        </td>\r\n        <td>\r\n          <Text>{phone}</Text>\r\n        </td>\r\n        <td>\r\n          <ButtonItems type=\"button\" onClick={() => onDeleteItem(id)}>\r\n            {loadingForDelete && (\r\n              <TailSpin\r\n                color=\"#00BFFF\"\r\n                height=\"14\"\r\n                width=\"14\"\r\n                wrapperStyle={{\r\n                  display: 'inline',\r\n                  marginRight: '10px',\r\n                }}\r\n              />\r\n            )}\r\n            Delete\r\n          </ButtonItems>\r\n        </td>\r\n      </tr>\r\n    </>\r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  contacs: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      phone: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default ContactListItem;\r\n","import { useSelector } from 'react-redux';\r\nimport { Table } from 'styles';\r\nimport ContactListItem from './ContactListItem';\r\nimport { getFilteredContacts } from '../../redux/contacts/contacts-selectors';\r\n\r\nconst ContactList = () => {\r\n  const items = useSelector(getFilteredContacts);\r\n\r\n  return (\r\n    <Table>\r\n      <tbody>\r\n        {items.map(item => (\r\n          <ContactListItem key={item.id} {...item} />\r\n        ))}\r\n      </tbody>\r\n    </Table>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import React, { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/contacts-operations';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Route, Routes } from 'react-router-dom';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { TailSpin } from 'react-loader-spinner';\nimport { Wrapper, Title } from 'styles';\nimport Navigation from 'components/Navigation';\nimport ContactForm from 'components/ContactForm';\nimport Filter from 'components/Filter';\nimport ContactList from 'components/ContactList';\nimport {\n  getError,\n  getFilteredContacts,\n  getLoadingForFetch,\n} from 'redux/contacts/contacts-selectors';\n\nfunction App() {\n  const filteredContacts = useSelector(getFilteredContacts);\n  const loadingForFetch = useSelector(getLoadingForFetch);\n  const error = useSelector(getError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      {error && toast.error(error)}\n      {loadingForFetch ? (\n        <TailSpin\n          color=\"#00BFFF\"\n          height=\"50\"\n          width=\"50\"\n          wrapperStyle={{\n            display: 'flex',\n            justifyContent: 'center',\n            marginTop: '50px',\n          }}\n        />\n      ) : (\n        <Wrapper>\n          <ToastContainer autoClose={2000} theme=\"colored\" />\n          <Navigation />\n          <Routes>\n            <Route path=\"/register\" />\n            <Route path=\"/login\" />\n            <Route path=\"/contacts\" />\n          </Routes>\n          <div>\n            <Title>Phonebook</Title>\n            <ContactForm />\n          </div>\n          {filteredContacts.length > 0 ? (\n            <div>\n              <Title>Contacts</Title>\n              <Filter />\n              <ContactList />\n            </div>\n          ) : (\n            <Title>You don't have contacts</Title>\n          )}\n        </Wrapper>\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport { store } from 'redux/store';\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}